syntax = "proto3";

import "v1/server/ServerData.proto";
import "v1/controller.proto";

message LobbyMessage {

    oneof message_type {
        ToRegisterClient to_register_client = 1;
        ToClientHeartbeat to_client_heartbeat = 2;
        ToGetLobbyInformation to_get_lobby_information = 3;
        ToDataDump to_data_dump = 4;

        ToUpdateControllableState to_update_controllable_state = 8;
        ToUpdateTransformData to_update_transform_data = 10;
        ToDataRobot to_data_robot = 12;

        FromRegisterClient from_register_client = 5;
        FromGetLobbyInformation from_get_lobby_information = 6;
        FromDataDumpConfirm from_data_dump_confirm = 7;
        FromSimulationTransformData from_simulation_transform_data = 9;
        FromControllableStates from_controllable_states = 11;
        FromDataRobot from_data_robot = 13;
    }

    /////////////////////
    // To The Server
    /////////////////////

    message ToRegisterClient {
        LobbyClientInformation client_info = 1;
    }

    message ToClientHeartbeat {
        // LobbyClientInformation client_info = 1;
    }

    message ToGetLobbyInformation {
        uint64 sender_guid = 1;
    }

    message ToDataDump {
        string identifier = 1;
        bytes data = 2;
    }

    message ToUpdateControllableState {
        uint64 guid = 1;
        repeated SynthesisAPI.Controller.SignalData data = 2;
    }

    message ToUpdateTransformData {
        repeated ServerTransforms transform_data = 1;
    }

    message ToDataRobot {
        uint64 guid = 1;
        DataRobot data_robot = 2;
    }

    /////////////////////
    // From The Server
    /////////////////////

    message FromRegisterClient {
        LobbyClientInformation updated_client_info = 1;
    }

    message FromGetLobbyInformation {
        LobbyInformation lobby_information = 1;
    }

    message FromDataDumpConfirm {
        string identifier = 1;
    }

    message FromSimulationTransformData {
        repeated ServerTransforms transform_data = 1;
    }

    message FromControllableStates {
        repeated SignalUpdates all_updates = 1;
    }

    message FromDataRobot {
        repeated DataRobot all_available_robots = 1;
    }
}
