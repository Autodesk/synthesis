// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: joint.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mirabuf {

  /// <summary>Holder for reflection information generated from joint.proto</summary>
  public static partial class JointReflection {

    #region Descriptor
    /// <summary>File descriptor for joint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtqb2ludC5wcm90bxIHbWlyYWJ1ZhoLdHlwZXMucHJvdG8ikQEKBkpvaW50",
            "cxIbCgRpbmZvGAEgASgLMg0ubWlyYWJ1Zi5JbmZvEisKBmpvaW50cxgCIAMo",
            "CzIbLm1pcmFidWYuSm9pbnRzLkpvaW50c0VudHJ5Gj0KC0pvaW50c0VudHJ5",
            "EgsKA2tleRgBIAEoCRIdCgV2YWx1ZRgCIAEoCzIOLm1pcmFidWYuSm9pbnQ6",
            "AjgBIpMDCgVKb2ludBINCgVQYXJ0MRgBIAEoCRINCgVQYXJ0MhgCIAEoCRIb",
            "CgRpbmZvGAMgASgLMg0ubWlyYWJ1Zi5JbmZvEiAKBm9yaWdpbhgEIAEoCzIQ",
            "Lm1pcmFidWYuVmVjdG9yMxIOCgZPZmZzZXQYBSABKAESDQoFQW5nbGUYBiAB",
            "KAESLQoPSm9pbnRNb3Rpb25UeXBlGAcgASgOMhQubWlyYWJ1Zi5Kb2ludE1v",
            "dGlvbhIUCgxNYXhpbXVtVmFsdWUYCCABKAESFAoMTWluaW11bVZhbHVlGAkg",
            "ASgBEhEKCVJlc3RWYWx1ZRgKIAEoARIyCg5SZXZvbHV0ZU1vdGlvbhgLIAEo",
            "CzIYLm1pcmFidWYuUm90YXRpb25hbEpvaW50SAASKwoLU2xpZGVNb3Rpb24Y",
            "DCABKAsyFC5taXJhYnVmLlNsaWRlckpvaW50SAASKgoLUmlnaWRNb3Rpb24Y",
            "DSABKAsyEy5taXJhYnVmLlJpZ2lkSm9pbnRIAEITChFNb3Rpb25EZXNjcmlw",
            "dGlvbiKWAQoPUm90YXRpb25hbEpvaW50EiMKDFJvdGF0aW9uQXhpcxgBIAEo",
            "DjINLm1pcmFidWYuQXhpcxIkCgpBeGlzVmVjdG9yGAIgASgLMhAubWlyYWJ1",
            "Zi5WZWN0b3IzEhAKCE1heFZhbHVlGAMgASgBEhAKCE1pblZhbHVlGAQgASgB",
            "EhQKDEN1cnJlbnRWYWx1ZRgFIAEoASKPAQoLU2xpZGVySm9pbnQSIAoJU2xp",
            "ZGVBeGlzGAEgASgOMg0ubWlyYWJ1Zi5BeGlzEiQKCkF4aXNWZWN0b3IYAiAB",
            "KAsyEC5taXJhYnVmLlZlY3RvcjMSEAoITWF4VmFsdWUYAyABKAESEAoITWlu",
            "VmFsdWUYBCABKAESFAoMQ3VycmVudFZhbHVlGAUgASgBIgwKClJpZ2lkSm9p",
            "bnQiLwoKUmlnaWRHcm91cBIMCgRuYW1lGAEgASgJEhMKC29jY3VycmVuY2Vz",
            "GAIgAygJKmsKC0pvaW50TW90aW9uEgkKBVJpZ2lkEAASDAoIUmV2b2x1dGUQ",
            "ARIKCgZTbGlkZXIQAhIPCgtDeWxpbmRyaWNhbBADEgsKB1BpblNsb3QQBBIK",
            "CgZQbGFuYXIQBRINCglCYWxsSm9pbnQQBmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mirabuf.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mirabuf.JointMotion), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.Joints), global::Mirabuf.Joints.Parser, new[]{ "Info", "Joints_" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.Joint), global::Mirabuf.Joint.Parser, new[]{ "Part1", "Part2", "Info", "Origin", "Offset", "Angle", "JointMotionType", "MaximumValue", "MinimumValue", "RestValue", "RevoluteMotion", "SlideMotion", "RigidMotion" }, new[]{ "MotionDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.RotationalJoint), global::Mirabuf.RotationalJoint.Parser, new[]{ "RotationAxis", "AxisVector", "MaxValue", "MinValue", "CurrentValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.SliderJoint), global::Mirabuf.SliderJoint.Parser, new[]{ "SlideAxis", "AxisVector", "MaxValue", "MinValue", "CurrentValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.RigidJoint), global::Mirabuf.RigidJoint.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mirabuf.RigidGroup), global::Mirabuf.RigidGroup.Parser, new[]{ "Name", "Occurrences" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Describes the joint
  /// </summary>
  public enum JointMotion {
    [pbr::OriginalName("Rigid")] Rigid = 0,
    [pbr::OriginalName("Revolute")] Revolute = 1,
    [pbr::OriginalName("Slider")] Slider = 2,
    [pbr::OriginalName("Cylindrical")] Cylindrical = 3,
    [pbr::OriginalName("PinSlot")] PinSlot = 4,
    [pbr::OriginalName("Planar")] Planar = 5,
    [pbr::OriginalName("BallJoint")] BallJoint = 6,
  }

  #endregion

  #region Messages
  /// <summary>
  //// THIS NEEDS TO BE RE-LOOKED OVER
  /// </summary>
  public sealed partial class Joints : pb::IMessage<Joints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Joints> _parser = new pb::MessageParser<Joints>(() => new Joints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Joints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joints(Joints other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      joints_ = other.joints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joints Clone() {
      return new Joints(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Mirabuf.Info info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Info Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "joints" field.</summary>
    public const int Joints_FieldNumber = 2;
    private static readonly pbc::MapField<string, global::Mirabuf.Joint>.Codec _map_joints_codec
        = new pbc::MapField<string, global::Mirabuf.Joint>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mirabuf.Joint.Parser), 18);
    private readonly pbc::MapField<string, global::Mirabuf.Joint> joints_ = new pbc::MapField<string, global::Mirabuf.Joint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Mirabuf.Joint> Joints_ {
      get { return joints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Joints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Joints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (!Joints_.Equals(other.Joints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      hash ^= Joints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      joints_.WriteTo(output, _map_joints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      joints_.WriteTo(ref output, _map_joints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      size += joints_.CalculateSize(_map_joints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Joints other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Mirabuf.Info();
        }
        Info.MergeFrom(other.Info);
      }
      joints_.Add(other.joints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Mirabuf.Info();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            joints_.AddEntriesFrom(input, _map_joints_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Mirabuf.Info();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            joints_.AddEntriesFrom(ref input, _map_joints_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a Joint in the Fusion Context that can be interpreted by anything 
  /// </summary>
  public sealed partial class Joint : pb::IMessage<Joint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Joint> _parser = new pb::MessageParser<Joint>(() => new Joint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Joint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joint(Joint other) : this() {
      part1_ = other.part1_;
      part2_ = other.part2_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      origin_ = other.origin_ != null ? other.origin_.Clone() : null;
      offset_ = other.offset_;
      angle_ = other.angle_;
      jointMotionType_ = other.jointMotionType_;
      maximumValue_ = other.maximumValue_;
      minimumValue_ = other.minimumValue_;
      restValue_ = other.restValue_;
      switch (other.MotionDescriptionCase) {
        case MotionDescriptionOneofCase.RevoluteMotion:
          RevoluteMotion = other.RevoluteMotion.Clone();
          break;
        case MotionDescriptionOneofCase.SlideMotion:
          SlideMotion = other.SlideMotion.Clone();
          break;
        case MotionDescriptionOneofCase.RigidMotion:
          RigidMotion = other.RigidMotion.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Joint Clone() {
      return new Joint(this);
    }

    /// <summary>Field number for the "Part1" field.</summary>
    public const int Part1FieldNumber = 1;
    private string part1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Part1 {
      get { return part1_; }
      set {
        part1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Part2" field.</summary>
    public const int Part2FieldNumber = 2;
    private string part2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Part2 {
      get { return part2_; }
      set {
        part2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private global::Mirabuf.Info info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Info Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 4;
    private global::Mirabuf.Vector3 origin_;
    /// <summary>
    /// 3D origin point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Vector3 Origin {
      get { return origin_; }
      set {
        origin_ = value;
      }
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private double offset_;
    /// <summary>
    /// offsets from the origin points
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Angle" field.</summary>
    public const int AngleFieldNumber = 6;
    private double angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "JointMotionType" field.</summary>
    public const int JointMotionTypeFieldNumber = 7;
    private global::Mirabuf.JointMotion jointMotionType_ = global::Mirabuf.JointMotion.Rigid;
    /// <summary>
    /// type of motion described by the joint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.JointMotion JointMotionType {
      get { return jointMotionType_; }
      set {
        jointMotionType_ = value;
      }
    }

    /// <summary>Field number for the "MaximumValue" field.</summary>
    public const int MaximumValueFieldNumber = 8;
    private double maximumValue_;
    /// <summary>
    /// fusion joint parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaximumValue {
      get { return maximumValue_; }
      set {
        maximumValue_ = value;
      }
    }

    /// <summary>Field number for the "MinimumValue" field.</summary>
    public const int MinimumValueFieldNumber = 9;
    private double minimumValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinimumValue {
      get { return minimumValue_; }
      set {
        minimumValue_ = value;
      }
    }

    /// <summary>Field number for the "RestValue" field.</summary>
    public const int RestValueFieldNumber = 10;
    private double restValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RestValue {
      get { return restValue_; }
      set {
        restValue_ = value;
      }
    }

    /// <summary>Field number for the "RevoluteMotion" field.</summary>
    public const int RevoluteMotionFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.RotationalJoint RevoluteMotion {
      get { return motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion ? (global::Mirabuf.RotationalJoint) motionDescription_ : null; }
      set {
        motionDescription_ = value;
        motionDescriptionCase_ = value == null ? MotionDescriptionOneofCase.None : MotionDescriptionOneofCase.RevoluteMotion;
      }
    }

    /// <summary>Field number for the "SlideMotion" field.</summary>
    public const int SlideMotionFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.SliderJoint SlideMotion {
      get { return motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion ? (global::Mirabuf.SliderJoint) motionDescription_ : null; }
      set {
        motionDescription_ = value;
        motionDescriptionCase_ = value == null ? MotionDescriptionOneofCase.None : MotionDescriptionOneofCase.SlideMotion;
      }
    }

    /// <summary>Field number for the "RigidMotion" field.</summary>
    public const int RigidMotionFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.RigidJoint RigidMotion {
      get { return motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion ? (global::Mirabuf.RigidJoint) motionDescription_ : null; }
      set {
        motionDescription_ = value;
        motionDescriptionCase_ = value == null ? MotionDescriptionOneofCase.None : MotionDescriptionOneofCase.RigidMotion;
      }
    }

    private object motionDescription_;
    /// <summary>Enum of possible cases for the "MotionDescription" oneof.</summary>
    public enum MotionDescriptionOneofCase {
      None = 0,
      RevoluteMotion = 11,
      SlideMotion = 12,
      RigidMotion = 13,
    }
    private MotionDescriptionOneofCase motionDescriptionCase_ = MotionDescriptionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MotionDescriptionOneofCase MotionDescriptionCase {
      get { return motionDescriptionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMotionDescription() {
      motionDescriptionCase_ = MotionDescriptionOneofCase.None;
      motionDescription_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Joint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Joint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Part1 != other.Part1) return false;
      if (Part2 != other.Part2) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (!object.Equals(Origin, other.Origin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Offset, other.Offset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (JointMotionType != other.JointMotionType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaximumValue, other.MaximumValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinimumValue, other.MinimumValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RestValue, other.RestValue)) return false;
      if (!object.Equals(RevoluteMotion, other.RevoluteMotion)) return false;
      if (!object.Equals(SlideMotion, other.SlideMotion)) return false;
      if (!object.Equals(RigidMotion, other.RigidMotion)) return false;
      if (MotionDescriptionCase != other.MotionDescriptionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Part1.Length != 0) hash ^= Part1.GetHashCode();
      if (Part2.Length != 0) hash ^= Part2.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (origin_ != null) hash ^= Origin.GetHashCode();
      if (Offset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Offset);
      if (Angle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Angle);
      if (JointMotionType != global::Mirabuf.JointMotion.Rigid) hash ^= JointMotionType.GetHashCode();
      if (MaximumValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaximumValue);
      if (MinimumValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinimumValue);
      if (RestValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RestValue);
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) hash ^= RevoluteMotion.GetHashCode();
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) hash ^= SlideMotion.GetHashCode();
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) hash ^= RigidMotion.GetHashCode();
      hash ^= (int) motionDescriptionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Part1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Part1);
      }
      if (Part2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Part2);
      }
      if (info_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Info);
      }
      if (origin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Origin);
      }
      if (Offset != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Offset);
      }
      if (Angle != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Angle);
      }
      if (JointMotionType != global::Mirabuf.JointMotion.Rigid) {
        output.WriteRawTag(56);
        output.WriteEnum((int) JointMotionType);
      }
      if (MaximumValue != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(MaximumValue);
      }
      if (MinimumValue != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(MinimumValue);
      }
      if (RestValue != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(RestValue);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) {
        output.WriteRawTag(90);
        output.WriteMessage(RevoluteMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) {
        output.WriteRawTag(98);
        output.WriteMessage(SlideMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) {
        output.WriteRawTag(106);
        output.WriteMessage(RigidMotion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Part1.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Part1);
      }
      if (Part2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Part2);
      }
      if (info_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Info);
      }
      if (origin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Origin);
      }
      if (Offset != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Offset);
      }
      if (Angle != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Angle);
      }
      if (JointMotionType != global::Mirabuf.JointMotion.Rigid) {
        output.WriteRawTag(56);
        output.WriteEnum((int) JointMotionType);
      }
      if (MaximumValue != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(MaximumValue);
      }
      if (MinimumValue != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(MinimumValue);
      }
      if (RestValue != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(RestValue);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) {
        output.WriteRawTag(90);
        output.WriteMessage(RevoluteMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) {
        output.WriteRawTag(98);
        output.WriteMessage(SlideMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) {
        output.WriteRawTag(106);
        output.WriteMessage(RigidMotion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Part1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Part1);
      }
      if (Part2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Part2);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (origin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
      }
      if (Offset != 0D) {
        size += 1 + 8;
      }
      if (Angle != 0D) {
        size += 1 + 8;
      }
      if (JointMotionType != global::Mirabuf.JointMotion.Rigid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) JointMotionType);
      }
      if (MaximumValue != 0D) {
        size += 1 + 8;
      }
      if (MinimumValue != 0D) {
        size += 1 + 8;
      }
      if (RestValue != 0D) {
        size += 1 + 8;
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RevoluteMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SlideMotion);
      }
      if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RigidMotion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Joint other) {
      if (other == null) {
        return;
      }
      if (other.Part1.Length != 0) {
        Part1 = other.Part1;
      }
      if (other.Part2.Length != 0) {
        Part2 = other.Part2;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Mirabuf.Info();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.origin_ != null) {
        if (origin_ == null) {
          Origin = new global::Mirabuf.Vector3();
        }
        Origin.MergeFrom(other.Origin);
      }
      if (other.Offset != 0D) {
        Offset = other.Offset;
      }
      if (other.Angle != 0D) {
        Angle = other.Angle;
      }
      if (other.JointMotionType != global::Mirabuf.JointMotion.Rigid) {
        JointMotionType = other.JointMotionType;
      }
      if (other.MaximumValue != 0D) {
        MaximumValue = other.MaximumValue;
      }
      if (other.MinimumValue != 0D) {
        MinimumValue = other.MinimumValue;
      }
      if (other.RestValue != 0D) {
        RestValue = other.RestValue;
      }
      switch (other.MotionDescriptionCase) {
        case MotionDescriptionOneofCase.RevoluteMotion:
          if (RevoluteMotion == null) {
            RevoluteMotion = new global::Mirabuf.RotationalJoint();
          }
          RevoluteMotion.MergeFrom(other.RevoluteMotion);
          break;
        case MotionDescriptionOneofCase.SlideMotion:
          if (SlideMotion == null) {
            SlideMotion = new global::Mirabuf.SliderJoint();
          }
          SlideMotion.MergeFrom(other.SlideMotion);
          break;
        case MotionDescriptionOneofCase.RigidMotion:
          if (RigidMotion == null) {
            RigidMotion = new global::Mirabuf.RigidJoint();
          }
          RigidMotion.MergeFrom(other.RigidMotion);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Part1 = input.ReadString();
            break;
          }
          case 18: {
            Part2 = input.ReadString();
            break;
          }
          case 26: {
            if (info_ == null) {
              Info = new global::Mirabuf.Info();
            }
            input.ReadMessage(Info);
            break;
          }
          case 34: {
            if (origin_ == null) {
              Origin = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 41: {
            Offset = input.ReadDouble();
            break;
          }
          case 49: {
            Angle = input.ReadDouble();
            break;
          }
          case 56: {
            JointMotionType = (global::Mirabuf.JointMotion) input.ReadEnum();
            break;
          }
          case 65: {
            MaximumValue = input.ReadDouble();
            break;
          }
          case 73: {
            MinimumValue = input.ReadDouble();
            break;
          }
          case 81: {
            RestValue = input.ReadDouble();
            break;
          }
          case 90: {
            global::Mirabuf.RotationalJoint subBuilder = new global::Mirabuf.RotationalJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) {
              subBuilder.MergeFrom(RevoluteMotion);
            }
            input.ReadMessage(subBuilder);
            RevoluteMotion = subBuilder;
            break;
          }
          case 98: {
            global::Mirabuf.SliderJoint subBuilder = new global::Mirabuf.SliderJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) {
              subBuilder.MergeFrom(SlideMotion);
            }
            input.ReadMessage(subBuilder);
            SlideMotion = subBuilder;
            break;
          }
          case 106: {
            global::Mirabuf.RigidJoint subBuilder = new global::Mirabuf.RigidJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) {
              subBuilder.MergeFrom(RigidMotion);
            }
            input.ReadMessage(subBuilder);
            RigidMotion = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Part1 = input.ReadString();
            break;
          }
          case 18: {
            Part2 = input.ReadString();
            break;
          }
          case 26: {
            if (info_ == null) {
              Info = new global::Mirabuf.Info();
            }
            input.ReadMessage(Info);
            break;
          }
          case 34: {
            if (origin_ == null) {
              Origin = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(Origin);
            break;
          }
          case 41: {
            Offset = input.ReadDouble();
            break;
          }
          case 49: {
            Angle = input.ReadDouble();
            break;
          }
          case 56: {
            JointMotionType = (global::Mirabuf.JointMotion) input.ReadEnum();
            break;
          }
          case 65: {
            MaximumValue = input.ReadDouble();
            break;
          }
          case 73: {
            MinimumValue = input.ReadDouble();
            break;
          }
          case 81: {
            RestValue = input.ReadDouble();
            break;
          }
          case 90: {
            global::Mirabuf.RotationalJoint subBuilder = new global::Mirabuf.RotationalJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.RevoluteMotion) {
              subBuilder.MergeFrom(RevoluteMotion);
            }
            input.ReadMessage(subBuilder);
            RevoluteMotion = subBuilder;
            break;
          }
          case 98: {
            global::Mirabuf.SliderJoint subBuilder = new global::Mirabuf.SliderJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.SlideMotion) {
              subBuilder.MergeFrom(SlideMotion);
            }
            input.ReadMessage(subBuilder);
            SlideMotion = subBuilder;
            break;
          }
          case 106: {
            global::Mirabuf.RigidJoint subBuilder = new global::Mirabuf.RigidJoint();
            if (motionDescriptionCase_ == MotionDescriptionOneofCase.RigidMotion) {
              subBuilder.MergeFrom(RigidMotion);
            }
            input.ReadMessage(subBuilder);
            RigidMotion = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// to specify vectors associated with rotational movement
  /// </summary>
  public sealed partial class RotationalJoint : pb::IMessage<RotationalJoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RotationalJoint> _parser = new pb::MessageParser<RotationalJoint>(() => new RotationalJoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RotationalJoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RotationalJoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RotationalJoint(RotationalJoint other) : this() {
      rotationAxis_ = other.rotationAxis_;
      axisVector_ = other.axisVector_ != null ? other.axisVector_.Clone() : null;
      maxValue_ = other.maxValue_;
      minValue_ = other.minValue_;
      currentValue_ = other.currentValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RotationalJoint Clone() {
      return new RotationalJoint(this);
    }

    /// <summary>Field number for the "RotationAxis" field.</summary>
    public const int RotationAxisFieldNumber = 1;
    private global::Mirabuf.Axis rotationAxis_ = global::Mirabuf.Axis.X;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Axis RotationAxis {
      get { return rotationAxis_; }
      set {
        rotationAxis_ = value;
      }
    }

    /// <summary>Field number for the "AxisVector" field.</summary>
    public const int AxisVectorFieldNumber = 2;
    private global::Mirabuf.Vector3 axisVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Vector3 AxisVector {
      get { return axisVector_; }
      set {
        axisVector_ = value;
      }
    }

    /// <summary>Field number for the "MaxValue" field.</summary>
    public const int MaxValueFieldNumber = 3;
    private double maxValue_;
    /// <summary>
    /// in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "MinValue" field.</summary>
    public const int MinValueFieldNumber = 4;
    private double minValue_;
    /// <summary>
    /// in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinValue {
      get { return minValue_; }
      set {
        minValue_ = value;
      }
    }

    /// <summary>Field number for the "CurrentValue" field.</summary>
    public const int CurrentValueFieldNumber = 5;
    private double currentValue_;
    /// <summary>
    /// in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentValue {
      get { return currentValue_; }
      set {
        currentValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RotationalJoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RotationalJoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RotationAxis != other.RotationAxis) return false;
      if (!object.Equals(AxisVector, other.AxisVector)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxValue, other.MaxValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinValue, other.MinValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentValue, other.CurrentValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RotationAxis != global::Mirabuf.Axis.X) hash ^= RotationAxis.GetHashCode();
      if (axisVector_ != null) hash ^= AxisVector.GetHashCode();
      if (MaxValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxValue);
      if (MinValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinValue);
      if (CurrentValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RotationAxis != global::Mirabuf.Axis.X) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RotationAxis);
      }
      if (axisVector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AxisVector);
      }
      if (MaxValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxValue);
      }
      if (MinValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinValue);
      }
      if (CurrentValue != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CurrentValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RotationAxis != global::Mirabuf.Axis.X) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RotationAxis);
      }
      if (axisVector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AxisVector);
      }
      if (MaxValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxValue);
      }
      if (MinValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinValue);
      }
      if (CurrentValue != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CurrentValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RotationAxis != global::Mirabuf.Axis.X) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RotationAxis);
      }
      if (axisVector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AxisVector);
      }
      if (MaxValue != 0D) {
        size += 1 + 8;
      }
      if (MinValue != 0D) {
        size += 1 + 8;
      }
      if (CurrentValue != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RotationalJoint other) {
      if (other == null) {
        return;
      }
      if (other.RotationAxis != global::Mirabuf.Axis.X) {
        RotationAxis = other.RotationAxis;
      }
      if (other.axisVector_ != null) {
        if (axisVector_ == null) {
          AxisVector = new global::Mirabuf.Vector3();
        }
        AxisVector.MergeFrom(other.AxisVector);
      }
      if (other.MaxValue != 0D) {
        MaxValue = other.MaxValue;
      }
      if (other.MinValue != 0D) {
        MinValue = other.MinValue;
      }
      if (other.CurrentValue != 0D) {
        CurrentValue = other.CurrentValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RotationAxis = (global::Mirabuf.Axis) input.ReadEnum();
            break;
          }
          case 18: {
            if (axisVector_ == null) {
              AxisVector = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(AxisVector);
            break;
          }
          case 25: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 33: {
            MinValue = input.ReadDouble();
            break;
          }
          case 41: {
            CurrentValue = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RotationAxis = (global::Mirabuf.Axis) input.ReadEnum();
            break;
          }
          case 18: {
            if (axisVector_ == null) {
              AxisVector = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(AxisVector);
            break;
          }
          case 25: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 33: {
            MinValue = input.ReadDouble();
            break;
          }
          case 41: {
            CurrentValue = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// to specify vectors associated with rotational movement
  /// </summary>
  public sealed partial class SliderJoint : pb::IMessage<SliderJoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SliderJoint> _parser = new pb::MessageParser<SliderJoint>(() => new SliderJoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SliderJoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SliderJoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SliderJoint(SliderJoint other) : this() {
      slideAxis_ = other.slideAxis_;
      axisVector_ = other.axisVector_ != null ? other.axisVector_.Clone() : null;
      maxValue_ = other.maxValue_;
      minValue_ = other.minValue_;
      currentValue_ = other.currentValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SliderJoint Clone() {
      return new SliderJoint(this);
    }

    /// <summary>Field number for the "SlideAxis" field.</summary>
    public const int SlideAxisFieldNumber = 1;
    private global::Mirabuf.Axis slideAxis_ = global::Mirabuf.Axis.X;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Axis SlideAxis {
      get { return slideAxis_; }
      set {
        slideAxis_ = value;
      }
    }

    /// <summary>Field number for the "AxisVector" field.</summary>
    public const int AxisVectorFieldNumber = 2;
    private global::Mirabuf.Vector3 axisVector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Mirabuf.Vector3 AxisVector {
      get { return axisVector_; }
      set {
        axisVector_ = value;
      }
    }

    /// <summary>Field number for the "MaxValue" field.</summary>
    public const int MaxValueFieldNumber = 3;
    private double maxValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "MinValue" field.</summary>
    public const int MinValueFieldNumber = 4;
    private double minValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MinValue {
      get { return minValue_; }
      set {
        minValue_ = value;
      }
    }

    /// <summary>Field number for the "CurrentValue" field.</summary>
    public const int CurrentValueFieldNumber = 5;
    private double currentValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CurrentValue {
      get { return currentValue_; }
      set {
        currentValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SliderJoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SliderJoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlideAxis != other.SlideAxis) return false;
      if (!object.Equals(AxisVector, other.AxisVector)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxValue, other.MaxValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MinValue, other.MinValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentValue, other.CurrentValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SlideAxis != global::Mirabuf.Axis.X) hash ^= SlideAxis.GetHashCode();
      if (axisVector_ != null) hash ^= AxisVector.GetHashCode();
      if (MaxValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxValue);
      if (MinValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MinValue);
      if (CurrentValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SlideAxis != global::Mirabuf.Axis.X) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SlideAxis);
      }
      if (axisVector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AxisVector);
      }
      if (MaxValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxValue);
      }
      if (MinValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinValue);
      }
      if (CurrentValue != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CurrentValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SlideAxis != global::Mirabuf.Axis.X) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SlideAxis);
      }
      if (axisVector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AxisVector);
      }
      if (MaxValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxValue);
      }
      if (MinValue != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MinValue);
      }
      if (CurrentValue != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(CurrentValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SlideAxis != global::Mirabuf.Axis.X) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SlideAxis);
      }
      if (axisVector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AxisVector);
      }
      if (MaxValue != 0D) {
        size += 1 + 8;
      }
      if (MinValue != 0D) {
        size += 1 + 8;
      }
      if (CurrentValue != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SliderJoint other) {
      if (other == null) {
        return;
      }
      if (other.SlideAxis != global::Mirabuf.Axis.X) {
        SlideAxis = other.SlideAxis;
      }
      if (other.axisVector_ != null) {
        if (axisVector_ == null) {
          AxisVector = new global::Mirabuf.Vector3();
        }
        AxisVector.MergeFrom(other.AxisVector);
      }
      if (other.MaxValue != 0D) {
        MaxValue = other.MaxValue;
      }
      if (other.MinValue != 0D) {
        MinValue = other.MinValue;
      }
      if (other.CurrentValue != 0D) {
        CurrentValue = other.CurrentValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlideAxis = (global::Mirabuf.Axis) input.ReadEnum();
            break;
          }
          case 18: {
            if (axisVector_ == null) {
              AxisVector = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(AxisVector);
            break;
          }
          case 25: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 33: {
            MinValue = input.ReadDouble();
            break;
          }
          case 41: {
            CurrentValue = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SlideAxis = (global::Mirabuf.Axis) input.ReadEnum();
            break;
          }
          case 18: {
            if (axisVector_ == null) {
              AxisVector = new global::Mirabuf.Vector3();
            }
            input.ReadMessage(AxisVector);
            break;
          }
          case 25: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 33: {
            MinValue = input.ReadDouble();
            break;
          }
          case 41: {
            CurrentValue = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RigidJoint : pb::IMessage<RigidJoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RigidJoint> _parser = new pb::MessageParser<RigidJoint>(() => new RigidJoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RigidJoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidJoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidJoint(RigidJoint other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidJoint Clone() {
      return new RigidJoint(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RigidJoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RigidJoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RigidJoint other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class RigidGroup : pb::IMessage<RigidGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RigidGroup> _parser = new pb::MessageParser<RigidGroup>(() => new RigidGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RigidGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mirabuf.JointReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidGroup(RigidGroup other) : this() {
      name_ = other.name_;
      occurrences_ = other.occurrences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RigidGroup Clone() {
      return new RigidGroup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "occurrences" field.</summary>
    public const int OccurrencesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_occurrences_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> occurrences_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// this could be the full path of the occurrence in order to make it easier to assembly them possibly - just parse on the unity side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Occurrences {
      get { return occurrences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RigidGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RigidGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!occurrences_.Equals(other.occurrences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= occurrences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      occurrences_.WriteTo(output, _repeated_occurrences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      occurrences_.WriteTo(ref output, _repeated_occurrences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += occurrences_.CalculateSize(_repeated_occurrences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RigidGroup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      occurrences_.Add(other.occurrences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            occurrences_.AddEntriesFrom(input, _repeated_occurrences_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            occurrences_.AddEntriesFrom(ref input, _repeated_occurrences_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
