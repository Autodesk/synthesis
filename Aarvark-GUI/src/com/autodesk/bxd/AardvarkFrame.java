/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.autodesk.bxd;

import java.awt.Desktop;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author t_sprij
 */
public class AardvarkFrame extends javax.swing.JFrame {

    /**
     * Creates new form AardvarkFrame
     */
    public AardvarkFrame() {
        initComponents();
        console.setEditable(false);
        Console.area = console;
        Console.reload = reloadButton;
        Console.frame = this;
        Console.kill();
        console.setText("");
    }

    private void setWindowPosition(JFrame window, int screen) {
        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice[] allDevices = env.getScreenDevices();
        int topLeftX, topLeftY, screenX, screenY, windowPosX, windowPosY;

        if (screen < allDevices.length && screen > -1) {
            topLeftX = allDevices[screen].getDefaultConfiguration().getBounds().x;
            topLeftY = allDevices[screen].getDefaultConfiguration().getBounds().y;

            screenX = allDevices[screen].getDefaultConfiguration().getBounds().width;
            screenY = allDevices[screen].getDefaultConfiguration().getBounds().height;
        } else {
            topLeftX = allDevices[0].getDefaultConfiguration().getBounds().x;
            topLeftY = allDevices[0].getDefaultConfiguration().getBounds().y;

            screenX = allDevices[0].getDefaultConfiguration().getBounds().width;
            screenY = allDevices[0].getDefaultConfiguration().getBounds().height;
        }

        windowPosX = ((screenX - window.getWidth()) / 2) + topLeftX;
        windowPosY = ((screenY - window.getHeight()) / 2) + topLeftY;

        window.setLocation(windowPosX, windowPosY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exeChooser = new javax.swing.JFileChooser();
        reloadButton = new javax.swing.JButton();
        mainPane = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        executable = new javax.swing.JTextField();
        stopButton = new javax.swing.JButton();
        mainMenu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        loadExe = new javax.swing.JMenuItem();
        loopbackAdapterItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        tutorialsItem = new javax.swing.JMenuItem();
        aboutItem = new javax.swing.JMenuItem();

        exeChooser.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Synthesis Robot Code");
        setName("mainFrame"); // NOI18N

        reloadButton.setLabel("Reload");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });

        console.setBackground(new java.awt.Color(0, 0, 0));
        console.setColumns(20);
        console.setForeground(new java.awt.Color(50, 255, 50));
        console.setLineWrap(true);
        console.setRows(5);
        console.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        mainPane.setViewportView(console);
        console.getAccessibleContext().setAccessibleName("");

        executable.setText("C:\\path\\to\\executable\\RobotCode.exe");

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        menuFile.setText("File");

        loadExe.setText("Load from Executable");
        loadExe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadExeActionPerformed(evt);
            }
        });
        menuFile.add(loadExe);

        loopbackAdapterItem.setText("Setup Loopback Adapter");
        loopbackAdapterItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopbackAdapterItemActionPerformed(evt);
            }
        });
        menuFile.add(loopbackAdapterItem);

        mainMenu.add(menuFile);

        helpMenu.setText("Help");

        tutorialsItem.setText("Tutorials");
        tutorialsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tutorialsItemActionPerformed(evt);
            }
        });
        helpMenu.add(tutorialsItem);

        aboutItem.setText("About");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutItem);

        mainMenu.add(helpMenu);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reloadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(executable)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reloadButton)
                    .addComponent(executable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton))
                .addContainerGap())
        );

        reloadButton.getAccessibleContext().setAccessibleName("reload");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        try {
            if (Console.running()) {
                int n = JOptionPane.showConfirmDialog(
                        this,
                        "Are you sure you want to terminate the current process and start another?",
                        "Confirm",
                        JOptionPane.YES_NO_OPTION);
                if (n == 0) {
                    Console.kill();
                    Console.start(executable.getText());
                    console.setText("");
                    currentFile = executable.getText();
                } else {
                    executable.setText(currentFile);
                }
            } else {
                Console.kill();
                Console.start(executable.getText());
                console.setText("");
                currentFile = executable.getText();
            }
        } catch (IOException ex) {
            Logger.getLogger(AardvarkFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reloadButtonActionPerformed

    private void loadExeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadExeActionPerformed
        exeChooser.setFileFilter(new ExtensionFileFilter("Executable (.exe, .jar)", new String[]{"EXE", "JAR"}));
        int returnVal = exeChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = exeChooser.getSelectedFile();
            if (file.canExecute()) {
                String old = executable.getText();
                executable.setText(file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_loadExeActionPerformed

    private void tutorialsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tutorialsItemActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(new URI("http://bxd.autodesk.com/synthesis/DriverStation"));
            } catch (IOException | URISyntaxException ex) {
                Logger.getLogger(AardvarkFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Your browser could not be opened by us. \nVisit http://bxd.autodesk.com/synthesis/DriverStation.");
        }
    }//GEN-LAST:event_tutorialsItemActionPerformed

    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        JOptionPane.showMessageDialog(this,
                "Created by the BXD Synthesis team at Autodesk Inc.");
    }//GEN-LAST:event_aboutItemActionPerformed

    private void loopbackAdapterItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopbackAdapterItemActionPerformed
        String loopbackAdapter = (String) JOptionPane.showInputDialog(
                this,
                "Enter the name of your loopback adapter:",
                "Loopback adapter",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "Local Area Connection 2");
        if (loopbackAdapter == null) {
            return; // on cancel actually cancel
        }
        String robotNumber = (String) JOptionPane.showInputDialog(
                this,
                "Enter your team number:",
                "Team number",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                "9999");
        if (robotNumber == null) {
            return; // on cancel actually cancel
        }
        int teamNumber = 9999;
        boolean invalidTeam = false;
        try {
            teamNumber = Integer.parseInt(robotNumber);
        } catch (NumberFormatException e) {
            invalidTeam = true;
        }

        if (teamNumber > 9999 || teamNumber < 0) {
            invalidTeam = true;
        }
        if (invalidTeam) {
            JOptionPane.showMessageDialog(this,
                    "Your team number is invalid.");
        } else {
            try {
                /*
                 Apperently if you try to include an executable in the .jar file and extract
                 it to a temporary directory and try to run it, antivirus software starts to
                 dislike you.
                 */

                // /*sketchy virusy behavior that luckily is not allowed (and is therefore commented out)*/
//                String property = "java.io.tmpdir";
//                String tempDir = System.getProperty(property);
//
//                InputStream input = getClass().getResourceAsStream("/com/autodesk/bxd/res/SetupLoopbackAdapter");
//                File targetFile = new File(tempDir + "\\SetupLoopbackAdapter.exe");
//                OutputStream outStream = new FileOutputStream(targetFile);
//
//                byte[] buffer = new byte[8 * 1024];
//                int bytesRead;
//                while ((bytesRead = input.read(buffer)) != -1) {
//                    outStream.write(buffer, 0, bytesRead);
//                }
                Process setupLoopbackProcess = // storing for no reason, can remove
                        new ProcessBuilder("cmd.exe", "/C", "start", "SetupLoopbackAdapter.exe", // pray that the jar file wasn't run from cmd
                                loopbackAdapter, robotNumber).start();
            } catch (IOException ex) {
                Logger.getLogger(AardvarkFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loopbackAdapterItemActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        if (Console.running()) {
            int n = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to terminate the current process?",
                    "Confirm",
                    JOptionPane.YES_NO_OPTION);
            if (n == 0) {
                Console.kill();
                console.setText(console.getText() + "\nProcess has been stopped." + "\n");
                console.invalidate();
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "There is no process running.");
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AardvarkFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AardvarkFrame frame = new AardvarkFrame();
                frame.setBounds(0, 0, 800, 600);

                frame.addWindowListener(new WindowAdapter() {
                    public void windowClosing(WindowEvent e) {
                        Console.kill();
                    }
                });

                frame.setVisible(true);
                frame.setWindowPosition(frame, 0);
                frame.invalidate();
                try {
                    frame.setIconImage(ImageIO.read(getClass().getClassLoader().getResource("com/autodesk/bxd/res/ico.png")));
                } catch (IOException ex) {
                    Logger.getLogger(AardvarkFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private String currentFile;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JTextArea console;
    private javax.swing.JFileChooser exeChooser;
    private javax.swing.JTextField executable;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem loadExe;
    private javax.swing.JMenuItem loopbackAdapterItem;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JScrollPane mainPane;
    private javax.swing.JMenu menuFile;
    private javax.swing.JButton reloadButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JMenuItem tutorialsItem;
    // End of variables declaration//GEN-END:variables
}
