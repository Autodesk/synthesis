<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAi
        DgAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/8IAAgcb7wEHAbxhAAH3
        AewB6xltAesBrgH3QgAB6wESAeoDbQHrD+wB6wJtA+oBBwIAAZIB6xltAhIB6gHsIQABDx0AARULAA4O
        BQABDgIAAfcB7BnrAW0CZgGuIgAdDiIAArwZBwH3AesBZgGuIQAFDhYPAw4iAAHwCxsB8AO8AfAE8gYb
        AQcB7QESAa4hAAIOBQ8REAYPCAAYDgIAAfAKGwHwAbwBBwHvAbsBvAHxBPIFGwEHAe0BEgGuIQABDgYP
        ExAEDwMAHQ4CAAHwBxsBmQGTAe8CBwGTAfcBtAH3AhwBkwEHARoFGwEHAe0BEgGuIQABDgQPFhADDwEO
        AgAdDgIAAfAGGwHyAZMBbwEcAfcBHAF0ARwBtAHsAm4BdAGTARoFGwEHAe0BEgGuIQABDgQPCBAEEQQQ
        AREGEAIPAQ4CAB0OAgAB8AUbAvIBmQF0A3MCdAFuA1IBdAEcAbwB8AQbAQcB7QESAa4hAAEOAw8GEA4R
        BRABDwEOAQABvBMOBA8GDgIAAfAFGwHwAbwBmQZ0BFIBdAEcAQcBvAQbAQcB7QESAa4hAAEOAg8GEA8R
        BhABDgEAAe8TDggPAg4B8AEAAfAEGwHwAbwB7wF5AXoDdAJ6AVICWQJSAXMBHAEHBBsBBwHtARIBriEA
        AQ4CDwUQEhEEEAEOAQABFQcODA8BEAkPAQcBAAHwBBsBGgGZAW4BdAR6AnkBdAJZAlIBSwF0AZkEGwEH
        Ae0BEgGuIQABDgEPBRANEQFDBhEDEAEOAQABDwQODg8HEAQPAW0BAAHwBBsBGgGZAXQBeQN6AnkBcwFL
        AVIBWANSAXQBmQQbAQcB7QESAa4hAAEOAQ8EEA4RA0MFEQIQAQ4BAAEQAg4IDwgQAxEHEAEPARABAAHw
        BRsBGgGaA3oCeQFzAW0BEQFKAVEDWAF5AZkEGwEHAe0BEgGuIQABDgQQBxEHQwERBUMEEQEQARQBAAcP
        DBAHEQUQAQAB8AYbARoBmgJ6AnkBcwFtARABSwFSAXkBHAKZARoEGwEHAe0BEgGuIQABDwQQBREQQwMR
        ARAB7QEAAQ4EDw0QARECQwcRAxABAAHwAfIGGwGaAnoCeQFzAW0BEAFLAVIBHAHvAbwBGgUbAQcB7QES
        Aa4hAAEPAxAFEQpDARUHQwMRAQcBAAMPBhAJEQhDBBEBEAEAAfEB8gbzAZoCegJ5AXMBbQEQAUsBUgGZ
        AQcB8AHyBfMBBwHtARIBriEAARQDEAQRC0MDFQVDAxEBBwEAAg8FEAsRBBUGQwMRAQAB8QHyBvMBGgKa
        ApkB7QFtARUBUQF5AZkBGgHyBvMBBwHtARIBriEAAe0CEAQRDEMFFQRDAhEBvAEAAfABEAERA0MDFQQU
        BRMCEgQTAhQCFQJDAgAB8QHyBvMBGwEaAZoCmQGSAewB6gFzAZkBGgEbB/MBBwHtARIBriEAAQcCEAMR
        CEMDFQFDARQGFQRDAREEAAEQGQ8BkgMAAfEI8gHxARsB8AG8Ae8B9wHtAQcBGgHxCPIBBwHtARIBriEA
        AQcBEAQRBkMGFQIUBhUDQwERBAABbRkQAQcDAAzxAbwCBwHvAbwK8QEHAe0BEgGuIQABvAEQAxEFQwgV
        BRQEFQNDBAABkhkQBAAb8AHvAe0BEgGuIgABEAMRBEMIFQcUBBUCQwQAAQcZEQQAAbsZtAG1Ae0B6wFm
        Aa4iAAMRBEMJFQgUAxUCQwUAGBEBQwQAAbQBsxitAc8BrgHqAWYBriIAAxEDQwoVBBMFFAMVAUMFAA1D
        ARUGFAQVAUMEAAG0Aa0YrAGtAYsChgGuIgADEQNDCBUBFAEVBRMFFAIVAUMHAAtDAe0PAAG0GrMBrQKn
        Ac8iAAESGxEBByIAAbsbtALPAbUjAAERARQMEQESA20D6gISARMCFAERIwAbvAMHAbwlAAEVC0MBFO4A
        AUIBTQE+BwABPgMAASgDAAGAAwABIAMAAQEBAAEBBgABAhYAA/8BAAz/BAAI/wGABwAI/wGABwAE/wHA
        AgABAQGABwABgAMAAcACAAEBAYAHAAGAAwABwAIAAQEBgAcAAYADAAHAAgABAQGABwABgAMAAcACAAEB
        AYAHAAGAAwABwAIAAQEBgAcAAYADAAHAAgABAQGABwABgAMAAcACAAEBAYAHAAGAAwABgAIAAQEBgAcA
        AYADAAGAAwABgAcAAYADAAGAAwABgAcAAYADAAGAAwABgAcAAYADAAGAAwABgAcAAYADAAGAAwABgAcA
        AYADAAGAAwABgAcAAYADAAGAAwABgAcAAYADAAGAAwABgAcAAYADAAGAAgABAQGABwABgAIAAQEB4AIA
        AQMBgAcAAYACAAEBAeACAAEDAYAHAAGAAgABAQHgAgABBwGABwABwAIAAQEB4AIAAQcBgAcAAcACAAEB
        AfACAAEHAYAHAAHAAgABAQHwAgABBwGABwABwAIAAQEB/AEAAT8B/wGABwABwAIAAQEE/wGABwAB4AIA
        AQME/wGABwAB+AEAAT8J/wQADP8EAAs=
</value>
  </data>
</root>