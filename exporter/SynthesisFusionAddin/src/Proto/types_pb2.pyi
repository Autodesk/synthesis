"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Common data type implementations
Intended to be re-used
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Axis:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AxisEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Axis.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    X: _Axis.ValueType  # 0
    Y: _Axis.ValueType  # 1
    Z: _Axis.ValueType  # 2

class Axis(_Axis, metaclass=_AxisEnumTypeWrapper):
    """Axis Enum"""

X: Axis.ValueType  # 0
Y: Axis.ValueType  # 1
Z: Axis.ValueType  # 2
global___Axis = Axis

@typing.final
class Node(google.protobuf.message.Message):
    """Each proper object within the Graph - First one is Root"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    USER_DATA_FIELD_NUMBER: builtins.int
    value: builtins.str
    """/ the reference ID for whatever kind of graph this is"""
    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Node]:
        """/ the children for the given leaf"""

    @property
    def user_data(self) -> global___UserData:
        """/ other associated data that can be used"""

    def __init__(
        self,
        *,
        value: builtins.str = ...,
        children: collections.abc.Iterable[global___Node] | None = ...,
        user_data: global___UserData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["user_data", b"user_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["children", b"children", "user_data", b"user_data", "value", b"value"]) -> None: ...

global___Node = Node

@typing.final
class GraphContainer(google.protobuf.message.Message):
    """Top level GraphContainer
    Contains all Graph element roots within
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODES_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Node]:
        """represents the root of each seperate assembly - most of the time 1 node"""

    def __init__(
        self,
        *,
        nodes: collections.abc.Iterable[global___Node] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["nodes", b"nodes"]) -> None: ...

global___GraphContainer = GraphContainer

@typing.final
class UserData(google.protobuf.message.Message):
    """*
    UserData

    Arbitrary data to append to a given message in map form
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """/ e.g. data["wheel"] = "yes" """

    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___UserData = UserData

@typing.final
class Vector3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___Vector3 = Vector3

@typing.final
class PhysicalProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DENSITY_FIELD_NUMBER: builtins.int
    MASS_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    AREA_FIELD_NUMBER: builtins.int
    COM_FIELD_NUMBER: builtins.int
    density: builtins.float
    """/ kg per cubic cm kg/(cm^3)"""
    mass: builtins.float
    """/ kg"""
    volume: builtins.float
    """/ cm^3"""
    area: builtins.float
    """/ cm^2"""
    @property
    def com(self) -> global___Vector3:
        """/ non-negative? Vec3"""

    def __init__(
        self,
        *,
        density: builtins.float = ...,
        mass: builtins.float = ...,
        volume: builtins.float = ...,
        area: builtins.float = ...,
        com: global___Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["com", b"com"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["area", b"area", "com", b"com", "density", b"density", "mass", b"mass", "volume", b"volume"]) -> None: ...

global___PhysicalProperties = PhysicalProperties

@typing.final
class Transform(google.protobuf.message.Message):
    """*
    Transform

    Data needed to apply scale, position, and rotational changes
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPATIAL_MATRIX_FIELD_NUMBER: builtins.int
    @property
    def spatial_matrix(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """
          flat map of 4x4 transform matrix 
          [00][01][02][03][10][11][12][13][20][21][22][23]
        """

    def __init__(
        self,
        *,
        spatial_matrix: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["spatial_matrix", b"spatial_matrix"]) -> None: ...

global___Transform = Transform

@typing.final
class Color(google.protobuf.message.Message):
    """RGBA in expanded form 0-255"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    R_FIELD_NUMBER: builtins.int
    G_FIELD_NUMBER: builtins.int
    B_FIELD_NUMBER: builtins.int
    A_FIELD_NUMBER: builtins.int
    R: builtins.int
    """red"""
    G: builtins.int
    """green"""
    B: builtins.int
    """blue"""
    A: builtins.int
    """alpha"""
    def __init__(
        self,
        *,
        R: builtins.int = ...,
        G: builtins.int = ...,
        B: builtins.int = ...,
        A: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["A", b"A", "B", b"B", "G", b"G", "R", b"R"]) -> None: ...

global___Color = Color

@typing.final
class Info(google.protobuf.message.Message):
    """*
    Defines basic fields for almost all objects
    The location where you can access the GUID for a reference
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GUID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    GUID: builtins.str
    """GUID unique value - must always be defined
    since guid's have exactly 128bits could be represented with bytes[]
    however endian becomes an issue
    """
    name: builtins.str
    """Generic readable name"""
    version: builtins.int
    """Version of object iteration"""
    def __init__(
        self,
        *,
        GUID: builtins.str = ...,
        name: builtins.str = ...,
        version: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["GUID", b"GUID", "name", b"name", "version", b"version"]) -> None: ...

global___Info = Info

@typing.final
class Thumbnail(google.protobuf.message.Message):
    """*
    A basic Thumbnail to be encoded in the file
    Most of the Time Fusion can encode the file with transparency as PNG not bitmap
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WIDTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    EXTENSION_FIELD_NUMBER: builtins.int
    TRANSPARENT_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    width: builtins.int
    """/ Image Width"""
    height: builtins.int
    """/ Image Height"""
    extension: builtins.str
    """/ Image Extension - ex. (.png, .bitmap, .jpeg)"""
    transparent: builtins.bool
    """/ Transparency - true from fusion when correctly configured"""
    data: builtins.bytes
    """/ Data as read from the file in bytes[] form"""
    def __init__(
        self,
        *,
        width: builtins.int = ...,
        height: builtins.int = ...,
        extension: builtins.str = ...,
        transparent: builtins.bool = ...,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "extension", b"extension", "height", b"height", "transparent", b"transparent", "width", b"width"]) -> None: ...

global___Thumbnail = Thumbnail
