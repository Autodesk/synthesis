"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import joint_pb2
import material_pb2
import signal_pb2
import types_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Assembly(google.protobuf.message.Message):
    """*
    Assembly
    Base Design to be interacted with
    THIS IS THE CURRENT FILE EXPORTED
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    DYNAMIC_FIELD_NUMBER: builtins.int
    PHYSICAL_DATA_FIELD_NUMBER: builtins.int
    DESIGN_HIERARCHY_FIELD_NUMBER: builtins.int
    JOINT_HIERARCHY_FIELD_NUMBER: builtins.int
    TRANSFORM_FIELD_NUMBER: builtins.int
    THUMBNAIL_FIELD_NUMBER: builtins.int
    dynamic: builtins.bool
    """/ Can it be effected by the simulation dynamically"""
    @property
    def info(self) -> types_pb2.Info:
        """/ Basic information (name, Author, etc)"""

    @property
    def data(self) -> global___AssemblyData:
        """/ All of the data in the assembly"""

    @property
    def physical_data(self) -> types_pb2.PhysicalProperties:
        """/ Overall physical data of the assembly"""

    @property
    def design_hierarchy(self) -> types_pb2.GraphContainer:
        """/ The Design hierarchy represented by Part Refs - The first object is a root container for all top level items"""

    @property
    def joint_hierarchy(self) -> types_pb2.GraphContainer:
        """/ The Joint hierarchy for compound shapes"""

    @property
    def transform(self) -> types_pb2.Transform:
        """/ The Transform in space currently"""

    @property
    def thumbnail(self) -> types_pb2.Thumbnail:
        """/ Optional thumbnail saved from Fusion 360 or scraped from previous configuration"""

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        data: global___AssemblyData | None = ...,
        dynamic: builtins.bool = ...,
        physical_data: types_pb2.PhysicalProperties | None = ...,
        design_hierarchy: types_pb2.GraphContainer | None = ...,
        joint_hierarchy: types_pb2.GraphContainer | None = ...,
        transform: types_pb2.Transform | None = ...,
        thumbnail: types_pb2.Thumbnail | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "design_hierarchy", b"design_hierarchy", "info", b"info", "joint_hierarchy", b"joint_hierarchy", "physical_data", b"physical_data", "thumbnail", b"thumbnail", "transform", b"transform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "design_hierarchy", b"design_hierarchy", "dynamic", b"dynamic", "info", b"info", "joint_hierarchy", b"joint_hierarchy", "physical_data", b"physical_data", "thumbnail", b"thumbnail", "transform", b"transform"]) -> None: ...

global___Assembly = Assembly

@typing.final
class AssemblyData(google.protobuf.message.Message):
    """*
    Data used to construct the assembly
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARTS_FIELD_NUMBER: builtins.int
    JOINTS_FIELD_NUMBER: builtins.int
    MATERIALS_FIELD_NUMBER: builtins.int
    SIGNALS_FIELD_NUMBER: builtins.int
    @property
    def parts(self) -> global___Parts:
        """/ Meshes and Design Objects"""

    @property
    def joints(self) -> joint_pb2.Joints:
        """/ Joint Definition Set"""

    @property
    def materials(self) -> material_pb2.Materials:
        """/ Appearance and Physical Material Set"""

    @property
    def signals(self) -> signal_pb2.Signals:
        """Contains table of all signals with ID reference"""

    def __init__(
        self,
        *,
        parts: global___Parts | None = ...,
        joints: joint_pb2.Joints | None = ...,
        materials: material_pb2.Materials | None = ...,
        signals: signal_pb2.Signals | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["joints", b"joints", "materials", b"materials", "parts", b"parts", "signals", b"signals"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["joints", b"joints", "materials", b"materials", "parts", b"parts", "signals", b"signals"]) -> None: ...

global___AssemblyData = AssemblyData

@typing.final
class Parts(google.protobuf.message.Message):
    """Part file can be exported seperately in the future"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PartDefinitionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___PartDefinition: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___PartDefinition | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class PartInstancesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___PartInstance: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___PartInstance | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    INFO_FIELD_NUMBER: builtins.int
    PART_DEFINITIONS_FIELD_NUMBER: builtins.int
    PART_INSTANCES_FIELD_NUMBER: builtins.int
    USER_DATA_FIELD_NUMBER: builtins.int
    @property
    def info(self) -> types_pb2.Info:
        """/ Part name, version, GUID"""

    @property
    def part_definitions(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___PartDefinition]:
        """/ Map of the Exported Part Definitions"""

    @property
    def part_instances(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___PartInstance]:
        """/ Map of the Exported Parts that make up the object"""

    @property
    def user_data(self) -> types_pb2.UserData:
        """/ other associated data that can be used
        end effector, wheel, etc
        """

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        part_definitions: collections.abc.Mapping[builtins.str, global___PartDefinition] | None = ...,
        part_instances: collections.abc.Mapping[builtins.str, global___PartInstance] | None = ...,
        user_data: types_pb2.UserData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info", b"info", "user_data", b"user_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["info", b"info", "part_definitions", b"part_definitions", "part_instances", b"part_instances", "user_data", b"user_data"]) -> None: ...

global___Parts = Parts

@typing.final
class PartDefinition(google.protobuf.message.Message):
    """*
    Part Definition
    Unique Definition of a part that can be replicated.
    Useful for keeping the object counter down in the scene.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFO_FIELD_NUMBER: builtins.int
    PHYSICAL_DATA_FIELD_NUMBER: builtins.int
    BASE_TRANSFORM_FIELD_NUMBER: builtins.int
    BODIES_FIELD_NUMBER: builtins.int
    DYNAMIC_FIELD_NUMBER: builtins.int
    FRICTION_OVERRIDE_FIELD_NUMBER: builtins.int
    MASS_OVERRIDE_FIELD_NUMBER: builtins.int
    dynamic: builtins.bool
    """/ Optional value to state whether an object is a dynamic object in a static assembly - all children are also considered overriden"""
    friction_override: builtins.float
    """/ Optional value for overriding the friction value 0-1"""
    mass_override: builtins.float
    """/ Optional value for overriding an indiviaul object's mass"""
    @property
    def info(self) -> types_pb2.Info:
        """/ Information about version - id - name"""

    @property
    def physical_data(self) -> types_pb2.PhysicalProperties:
        """/ Physical data associated with Part"""

    @property
    def base_transform(self) -> types_pb2.Transform:
        """/ Base Transform applied - Most Likely Identity Matrix"""

    @property
    def bodies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Body]:
        """/ Mesh Bodies to populate part"""

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        physical_data: types_pb2.PhysicalProperties | None = ...,
        base_transform: types_pb2.Transform | None = ...,
        bodies: collections.abc.Iterable[global___Body] | None = ...,
        dynamic: builtins.bool = ...,
        friction_override: builtins.float = ...,
        mass_override: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["base_transform", b"base_transform", "info", b"info", "physical_data", b"physical_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["base_transform", b"base_transform", "bodies", b"bodies", "dynamic", b"dynamic", "friction_override", b"friction_override", "info", b"info", "mass_override", b"mass_override", "physical_data", b"physical_data"]) -> None: ...

global___PartDefinition = PartDefinition

@typing.final
class PartInstance(google.protobuf.message.Message):
    """
    Part
    Represents a object that does not have to be unique
    Can be an override for an existing definition
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFO_FIELD_NUMBER: builtins.int
    PART_DEFINITION_REFERENCE_FIELD_NUMBER: builtins.int
    TRANSFORM_FIELD_NUMBER: builtins.int
    GLOBAL_TRANSFORM_FIELD_NUMBER: builtins.int
    JOINTS_FIELD_NUMBER: builtins.int
    APPEARANCE_FIELD_NUMBER: builtins.int
    PHYSICAL_MATERIAL_FIELD_NUMBER: builtins.int
    SKIP_COLLIDER_FIELD_NUMBER: builtins.int
    part_definition_reference: builtins.str
    """/ Reference to the Part Definition defined in Assembly Data"""
    appearance: builtins.str
    """Appearance Reference to link to `Materials->Appearance->Info->id`"""
    physical_material: builtins.str
    """/ Physical Material Reference to link to `Materials->PhysicalMaterial->Info->id`"""
    skip_collider: builtins.bool
    """/ Flag that if enabled indicates we should skip generating a collider, defaults to FALSE or undefined"""
    @property
    def info(self) -> types_pb2.Info: ...
    @property
    def transform(self) -> types_pb2.Transform:
        """/ Overriding the object transform (moves the part from the def) - in design hierarchy context"""

    @property
    def global_transform(self) -> types_pb2.Transform:
        """/ Position transform from a global scope"""

    @property
    def joints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """/ Joints that interact with this element"""

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        part_definition_reference: builtins.str = ...,
        transform: types_pb2.Transform | None = ...,
        global_transform: types_pb2.Transform | None = ...,
        joints: collections.abc.Iterable[builtins.str] | None = ...,
        appearance: builtins.str = ...,
        physical_material: builtins.str = ...,
        skip_collider: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["global_transform", b"global_transform", "info", b"info", "transform", b"transform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["appearance", b"appearance", "global_transform", b"global_transform", "info", b"info", "joints", b"joints", "part_definition_reference", b"part_definition_reference", "physical_material", b"physical_material", "skip_collider", b"skip_collider", "transform", b"transform"]) -> None: ...

global___PartInstance = PartInstance

@typing.final
class Body(google.protobuf.message.Message):
    """
    Body object
    Can contain a TriangleMesh or Collection of Faces.
    Must be unique in the context of the Assembly.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFO_FIELD_NUMBER: builtins.int
    PART_FIELD_NUMBER: builtins.int
    TRIANGLE_MESH_FIELD_NUMBER: builtins.int
    APPEARANCE_OVERRIDE_FIELD_NUMBER: builtins.int
    part: builtins.str
    """/ Reference to Part Definition"""
    appearance_override: builtins.str
    """/ Override Visual Appearance for the body"""
    @property
    def info(self) -> types_pb2.Info: ...
    @property
    def triangle_mesh(self) -> global___TriangleMesh:
        """/ Triangle Mesh for rendering"""

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        part: builtins.str = ...,
        triangle_mesh: global___TriangleMesh | None = ...,
        appearance_override: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info", b"info", "triangle_mesh", b"triangle_mesh"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["appearance_override", b"appearance_override", "info", b"info", "part", b"part", "triangle_mesh", b"triangle_mesh"]) -> None: ...

global___Body = Body

@typing.final
class TriangleMesh(google.protobuf.message.Message):
    """*
    Traingle Mesh for Storing Display Mesh data
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFO_FIELD_NUMBER: builtins.int
    HAS_VOLUME_FIELD_NUMBER: builtins.int
    MATERIAL_REFERENCE_FIELD_NUMBER: builtins.int
    MESH_FIELD_NUMBER: builtins.int
    BMESH_FIELD_NUMBER: builtins.int
    has_volume: builtins.bool
    """/ Is this object a Plane ? (Does it have volume)"""
    material_reference: builtins.str
    """/ Rendered Appearance properties referenced from Assembly Data"""
    @property
    def info(self) -> types_pb2.Info: ...
    @property
    def mesh(self) -> global___Mesh:
        """/ Stored as true types, inidicies, verts, uv"""

    @property
    def bmesh(self) -> global___BinaryMesh:
        """/ Stored as binary data in bytes"""

    def __init__(
        self,
        *,
        info: types_pb2.Info | None = ...,
        has_volume: builtins.bool = ...,
        material_reference: builtins.str = ...,
        mesh: global___Mesh | None = ...,
        bmesh: global___BinaryMesh | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["bmesh", b"bmesh", "info", b"info", "mesh", b"mesh", "mesh_type", b"mesh_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bmesh", b"bmesh", "has_volume", b"has_volume", "info", b"info", "material_reference", b"material_reference", "mesh", b"mesh", "mesh_type", b"mesh_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["mesh_type", b"mesh_type"]) -> typing.Literal["mesh", "bmesh"] | None: ...

global___TriangleMesh = TriangleMesh

@typing.final
class Mesh(google.protobuf.message.Message):
    """*
    Mesh Data stored as generic Data Structure
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VERTS_FIELD_NUMBER: builtins.int
    NORMALS_FIELD_NUMBER: builtins.int
    UV_FIELD_NUMBER: builtins.int
    INDICES_FIELD_NUMBER: builtins.int
    @property
    def verts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """/ Tri Mesh Verts vec3"""

    @property
    def normals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """/ Tri Mesh Normals vec3"""

    @property
    def uv(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """/ Tri Mesh uv Mapping vec2"""

    @property
    def indices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """/ Tri Mesh indicies (Vert Map)"""

    def __init__(
        self,
        *,
        verts: collections.abc.Iterable[builtins.float] | None = ...,
        normals: collections.abc.Iterable[builtins.float] | None = ...,
        uv: collections.abc.Iterable[builtins.float] | None = ...,
        indices: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["indices", b"indices", "normals", b"normals", "uv", b"uv", "verts", b"verts"]) -> None: ...

global___Mesh = Mesh

@typing.final
class BinaryMesh(google.protobuf.message.Message):
    """/ Mesh used for more effective file transfers"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    """/ BEWARE of ENDIANESS"""
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["data", b"data"]) -> None: ...

global___BinaryMesh = BinaryMesh
