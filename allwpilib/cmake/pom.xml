<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.wpi.first.wpilib.cmake</groupId>
	<artifactId>cpp-root</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<profiles>
		<profile>
			<id>unix-properties</id>
			<properties>
				<cmakeGenerator>Unix Makefiles</cmakeGenerator>
			</properties>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
		</profile>
		<profile>
			<id>MAC-properties</id>
			<properties>
				<cmakeGenerator>Unix Makefiles</cmakeGenerator>
			</properties>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
		</profile>
		<profile>
			<id>windows-properties</id>
			<properties>
				<cmakeGenerator>MSYS Makefiles</cmakeGenerator>
			</properties>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>com.googlecode.cmake-maven-project</groupId>
				<artifactId>cmake-maven-plugin</artifactId>
				<version>2.8.11-b4</version>
				<executions>
					<execution>
						<id>cmake</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<options>
								<option>-DCMAKE_TOOLCHAIN_FILE=../../../arm-toolchain.cmake</option>
								<option>-DCMAKE_INSTALL_PREFIX=target-root</option>
							</options>
						</configuration>
					</execution>
					<execution>
						<id>cmake2</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<target>install</target>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<sourcePath>..</sourcePath>
					<targetPath>${project.build.directory}/cmake</targetPath>
					<projectDirectory>${project.build.directory}/cmake</projectDirectory>
					<generator>${cmakeGenerator}</generator>
					<buildType>release</buildType>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<!-- Set time stamp and version properties. -->
					<execution>
						<id>set-version-info</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<target>
								<tstamp>
									<format property="timestamp" pattern="yyyy/MM/dd HH:mm:ss z"/>
								</tstamp>
								<tstamp>
									<format property="version-info" pattern="yyyy.MMdd.HHmmss"/>
								</tstamp>
								<property name="version" value="${version-info}.${build-number}"/>
							</target>
							<exportAntProperties>true</exportAntProperties>
						</configuration>
					</execution>
					<!-- Unzip the include files for cpp.zip. -->
					<execution>
						<id>unzip-cpp-includes</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo file="${project.build.directory}/cmake/target-root/so.properties">cpp-sos=${version-info}</echo>
								<zip destfile="${project.build.directory}/${project.build.finalName}.zip" basedir="${project.build.directory}/cmake/target-root" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
        <execution>
						<id>zip-cpp-includes</id>
						<phase>compile</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/${project.build.finalName}.zip</file>
                  <type>zip</type>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/cmake/target-root/lib/libHALAthena.a</file>
                  <type>a</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
	</build>
</project>
