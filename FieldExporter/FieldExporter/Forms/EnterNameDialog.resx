<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="aardvarkPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>