<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Grpc.Reflection</name>
    </assembly>
    <members>
        <member name="T:Grpc.Reflection.V1Alpha.ReflectionReflection">
            <summary>Holder for reflection information generated from grpc/reflection/v1alpha/reflection.proto</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ReflectionReflection.Descriptor">
            <summary>File descriptor for grpc/reflection/v1alpha/reflection.proto</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflectionRequest">
            <summary>
            The message sent by the client when calling ServerReflectionInfo method.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.HostFieldNumber">
            <summary>Field number for the "host" field.</summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileByFilenameFieldNumber">
            <summary>Field number for the "file_by_filename" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileByFilename">
            <summary>
            Find a proto file by the file name.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileContainingSymbolFieldNumber">
            <summary>Field number for the "file_containing_symbol" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileContainingSymbol">
            <summary>
            Find the proto file that declares the given fully-qualified symbol name.
            This field should be a fully-qualified symbol name
            (e.g. &lt;package>.&lt;service>[.&lt;method>] or &lt;package>.&lt;type>).
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileContainingExtensionFieldNumber">
            <summary>Field number for the "file_containing_extension" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionRequest.FileContainingExtension">
            <summary>
            Find the proto file which defines an extension extending the given
            message type with the given field number.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.AllExtensionNumbersOfTypeFieldNumber">
            <summary>Field number for the "all_extension_numbers_of_type" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionRequest.AllExtensionNumbersOfType">
            <summary>
            Finds the tag numbers used by all known extensions of the given message
            type, and appends them to ExtensionNumberResponse in an undefined order.
            Its corresponding method is best-effort: it's not guaranteed that the
            reflection service will implement this method, and it's not guaranteed
            that this method will provide all extensions. Returns
            StatusCode::UNIMPLEMENTED if it's not implemented.
            This field should be a fully-qualified type name. The format is
            &lt;package>.&lt;type>
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionRequest.ListServicesFieldNumber">
            <summary>Field number for the "list_services" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionRequest.ListServices">
            <summary>
            List the full names of registered services. The content will not be
            checked.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflectionRequest.MessageRequestOneofCase">
            <summary>Enum of possible cases for the "message_request" oneof.</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ExtensionRequest">
            <summary>
            The type name and extension number sent by the client when requesting
            file_containing_extension.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ExtensionRequest.ContainingTypeFieldNumber">
            <summary>Field number for the "containing_type" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ExtensionRequest.ContainingType">
            <summary>
            Fully-qualified type name. The format should be &lt;package>.&lt;type>
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ExtensionRequest.ExtensionNumberFieldNumber">
            <summary>Field number for the "extension_number" field.</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflectionResponse">
            <summary>
            The message sent by the server to answer ServerReflectionInfo method.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.ValidHostFieldNumber">
            <summary>Field number for the "valid_host" field.</summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.OriginalRequestFieldNumber">
            <summary>Field number for the "original_request" field.</summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.FileDescriptorResponseFieldNumber">
            <summary>Field number for the "file_descriptor_response" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionResponse.FileDescriptorResponse">
            <summary>
            This message is used to answer file_by_filename, file_containing_symbol,
            file_containing_extension requests with transitive dependencies. As
            the repeated label is not allowed in oneof fields, we use a
            FileDescriptorResponse message to encapsulate the repeated fields.
            The reflection service is allowed to avoid sending FileDescriptorProtos
            that were previously sent in response to earlier requests in the stream.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.AllExtensionNumbersResponseFieldNumber">
            <summary>Field number for the "all_extension_numbers_response" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionResponse.AllExtensionNumbersResponse">
            <summary>
            This message is used to answer all_extension_numbers_of_type requst.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.ListServicesResponseFieldNumber">
            <summary>Field number for the "list_services_response" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionResponse.ListServicesResponse">
            <summary>
            This message is used to answer list_services request.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServerReflectionResponse.ErrorResponseFieldNumber">
            <summary>Field number for the "error_response" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflectionResponse.ErrorResponse">
            <summary>
            This message is used when an error occurs.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflectionResponse.MessageResponseOneofCase">
            <summary>Enum of possible cases for the "message_response" oneof.</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.FileDescriptorResponse">
            <summary>
            Serialized FileDescriptorProto messages sent by the server answering
            a file_by_filename, file_containing_symbol, or file_containing_extension
            request.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.FileDescriptorResponse.FileDescriptorProtoFieldNumber">
            <summary>Field number for the "file_descriptor_proto" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.FileDescriptorResponse.FileDescriptorProto">
            <summary>
            Serialized FileDescriptorProto messages. We avoid taking a dependency on
            descriptor.proto, which uses proto2 only features, by making them opaque
            bytes instead.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ExtensionNumberResponse">
            <summary>
            A list of extension numbers sent by the server answering
            all_extension_numbers_of_type request.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ExtensionNumberResponse.BaseTypeNameFieldNumber">
            <summary>Field number for the "base_type_name" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ExtensionNumberResponse.BaseTypeName">
            <summary>
            Full name of the base type, including the package name. The format
            is &lt;package>.&lt;type>
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ExtensionNumberResponse.ExtensionNumberFieldNumber">
            <summary>Field number for the "extension_number" field.</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ListServiceResponse">
            <summary>
            A list of ServiceResponse sent by the server answering list_services request.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ListServiceResponse.ServiceFieldNumber">
            <summary>Field number for the "service" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ListServiceResponse.Service">
            <summary>
            The information of each service may be expanded in the future, so we use
            ServiceResponse message to encapsulate it.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServiceResponse">
            <summary>
            The information of a single service used by ListServiceResponse to answer
            list_services request.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ServiceResponse.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServiceResponse.Name">
            <summary>
            Full name of a registered service, including its package name. The format
            is &lt;package>.&lt;service>
            </summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ErrorResponse">
            <summary>
            The error code and error message sent by the server when an error occurs.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ErrorResponse.ErrorCodeFieldNumber">
            <summary>Field number for the "error_code" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ErrorResponse.ErrorCode">
            <summary>
            This field uses the error codes defined in grpc::StatusCode.
            </summary>
        </member>
        <member name="F:Grpc.Reflection.V1Alpha.ErrorResponse.ErrorMessageFieldNumber">
            <summary>Field number for the "error_message" field.</summary>
        </member>
        <member name="P:Grpc.Reflection.V1Alpha.ServerReflection.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionBase">
            <summary>Base class for server-side implementations of ServerReflection</summary>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionBase.ServerReflectionInfo(Grpc.Core.IAsyncStreamReader{Grpc.Reflection.V1Alpha.ServerReflectionRequest},Grpc.Core.IServerStreamWriter{Grpc.Reflection.V1Alpha.ServerReflectionResponse},Grpc.Core.ServerCallContext)">
            <summary>
            The reflection service is structured as a bidirectional stream, ensuring
            all related requests go to a single server.
            </summary>
            <param name="requestStream">Used for reading requests from the client.</param>
            <param name="responseStream">Used for sending responses back to the client.</param>
            <param name="context">The context of the server-side call handler being invoked.</param>
            <returns>A task indicating completion of the handler.</returns>
        </member>
        <member name="T:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient">
            <summary>Client for ServerReflection</summary>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for ServerReflection</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for ServerReflection that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.ServerReflectionInfo(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            The reflection service is structured as a bidirectional stream, ensuring
            all related requests go to a single server.
            </summary>
            <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
            <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
            <param name="cancellationToken">An optional token for canceling the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.ServerReflectionInfo(Grpc.Core.CallOptions)">
            <summary>
            The reflection service is structured as a bidirectional stream, ensuring
            all related requests go to a single server.
            </summary>
            <param name="options">The options for the call.</param>
            <returns>The call object.</returns>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.BindService(Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionBase)">
            <summary>Creates service definition that can be registered with a server</summary>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="M:Grpc.Reflection.V1Alpha.ServerReflection.BindService(Grpc.Core.ServiceBinderBase,Grpc.Reflection.V1Alpha.ServerReflection.ServerReflectionBase)">
            <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
            Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
            <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
            <param name="serviceImpl">An object implementing the server-side handling logic.</param>
        </member>
        <member name="T:Grpc.Reflection.ReflectionServiceImpl">
            <summary>
            Implementation of server reflection service.
            </summary>
        </member>
        <member name="M:Grpc.Reflection.ReflectionServiceImpl.#ctor(System.Collections.Generic.IEnumerable{System.String},Grpc.Reflection.SymbolRegistry)">
            <summary>
            Creates a new instance of <c>ReflectionServiceIml</c>.
            </summary>
        </member>
        <member name="M:Grpc.Reflection.ReflectionServiceImpl.#ctor(System.Collections.Generic.IEnumerable{Google.Protobuf.Reflection.ServiceDescriptor})">
            <summary>
            Creates a new instance of <c>ReflectionServiceIml</c>.
            </summary>
        </member>
        <member name="M:Grpc.Reflection.ReflectionServiceImpl.#ctor(Google.Protobuf.Reflection.ServiceDescriptor[])">
            <summary>
            Creates a new instance of <c>ReflectionServiceIml</c>.
            </summary>
        </member>
        <member name="M:Grpc.Reflection.ReflectionServiceImpl.ServerReflectionInfo(Grpc.Core.IAsyncStreamReader{Grpc.Reflection.V1Alpha.ServerReflectionRequest},Grpc.Core.IServerStreamWriter{Grpc.Reflection.V1Alpha.ServerReflectionResponse},Grpc.Core.ServerCallContext)">
            <summary>
            Processes a stream of server reflection requests.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.SymbolRegistry">
            <summary>Registry of protobuf symbols</summary>
        </member>
        <member name="M:Grpc.Reflection.SymbolRegistry.FromFiles(System.Collections.Generic.IEnumerable{Google.Protobuf.Reflection.FileDescriptor})">
            <summary>
            Creates a symbol registry from the specified set of file descriptors.
            </summary>
            <param name="fileDescriptors">The set of files to include in the registry. Must not contain null values.</param>
            <returns>A symbol registry for the given files.</returns>
        </member>
        <member name="M:Grpc.Reflection.SymbolRegistry.FileByName(System.String)">
            <summary>
            Gets file descriptor for given file name (including package path). Returns <c>null</c> if not found.
            </summary>
        </member>
        <member name="M:Grpc.Reflection.SymbolRegistry.FileContainingSymbol(System.String)">
            <summary>
            Gets file descriptor that contains definition of given symbol full name (including package path). Returns <c>null</c> if not found.
            </summary>
        </member>
        <member name="T:Grpc.Reflection.SymbolRegistry.Builder">
            <summary>
            Builder class which isn't exposed, but acts as a convenient alternative to passing round two dictionaries in recursive calls.
            </summary>
        </member>
    </members>
</doc>
