<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="warningImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>