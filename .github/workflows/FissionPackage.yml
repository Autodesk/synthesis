name: Fission - Package

on:
  workflow_dispatch: {}
  push:
    branches: [ master, dev ]

jobs:
  runUnitTests:
    name: Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: JavaScript Setup
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Get date
      id: date # this is used on variable path
      run: |
        echo "timestamp=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

    - name: Cache downloaded assets
      id: cache-assets
      uses: actions/cache@v2
      with:
        path: fission/public/
        key: ${{ runner.os }}-assets-v1
        restore-keys: |
          ${{ runner.os }}-assets-

    - name: Download assets if not cached
      if: steps.cache-assets.outputs.cache-hit != 'true'
      run: |
        cd fission
        curl -o public/assetpack.zip https://synthesis.autodesk.com/Downloadables/assetpack.zip && unzip -o public/assetpack.zip -d public/

    - name: Install Dependencies
      run: |
        cd fission
        rm package-lock.json
        npm install

    - name: Get package info
      id: info
      uses: codex-team/action-nodejs-package-info@v1.1
      with:
        path: fission/

    - name: Build
      id: build
      run: |
        cd fission
        npm run build:prod
        npm run build:dev

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      id: upload-artifact-prod
      with:
        name: "${{ steps.info.outputs.name }}@${{ steps.info.outputs.version }}[${{ steps.date.outputs.timestamp }}]"
        path: fission/dist/prod/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      id: upload-artifact-dev
      with:
        name: "${{ steps.info.outputs.name }}-dev@${{ steps.info.outputs.version }}[${{ steps.date.outputs.timestamp }}]"
        path: fission/dist/dev/