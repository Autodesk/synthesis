/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include "ctre/CanTalonSRX.h"


static double *new_doublep() { 
  return new double(); 
}

static double *copy_doublep(double value) { 
  return new double(value); 
}

static void delete_doublep(double *obj) { 
  if (obj) delete obj; 
}

static void doublep_assign(double *obj, double value) {
  *obj = value;
}

static double doublep_value(double *obj) {
  return *obj;
}


static int *new_intp() { 
  return new int(); 
}

static int *copy_intp(int value) { 
  return new int(value); 
}

static void delete_intp(int *obj) { 
  if (obj) delete obj; 
}

static void intp_assign(int *obj, int value) {
  *obj = value;
}

static int intp_value(int *obj) {
  return *obj;
}


static uint32_t *new_uint32_tp() { 
  return new uint32_t(); 
}

static uint32_t *copy_uint32_tp(uint32_t value) { 
  return new uint32_t(value); 
}

static void delete_uint32_tp(uint32_t *obj) { 
  if (obj) delete obj; 
}

static void uint32_tp_assign(uint32_t *obj, uint32_t value) {
  *obj = value;
}

static uint32_t uint32_tp_value(uint32_t *obj) {
  return *obj;
}


static int32_t *new_int32_tp() { 
  return new int32_t(); 
}

static int32_t *copy_int32_tp(int32_t value) { 
  return new int32_t(value); 
}

static void delete_int32_tp(int32_t *obj) { 
  if (obj) delete obj; 
}

static void int32_tp_assign(int32_t *obj, int32_t value) {
  *obj = value;
}

static int32_t int32_tp_value(int32_t *obj) {
  return *obj;
}


static uint8_t *new_uint8_tp() { 
  return new uint8_t(); 
}

static uint8_t *copy_uint8_tp(uint8_t value) { 
  return new uint8_t(value); 
}

static void delete_uint8_tp(uint8_t *obj) { 
  if (obj) delete obj; 
}

static void uint8_tp_assign(uint8_t *obj, uint8_t value) {
  *obj = value;
}

static uint8_t uint8_tp_value(uint8_t *obj) {
  return *obj;
}


static CTR_Code *new_CTR_Codep() { 
  return new CTR_Code(); 
}

static CTR_Code *copy_CTR_Codep(CTR_Code value) { 
  return new CTR_Code(value); 
}

static void delete_CTR_Codep(CTR_Code *obj) { 
  if (obj) delete obj; 
}

static void CTR_Codep_assign(CTR_Code *obj, CTR_Code value) {
  *obj = value;
}

static CTR_Code CTR_Codep_value(CTR_Code *obj) {
  return *obj;
}


static float *new_floatp() { 
  return new float(); 
}

static float *copy_floatp(float value) { 
  return new float(value); 
}

static void delete_floatp(float *obj) { 
  if (obj) delete obj; 
}

static void floatp_assign(float *obj, float value) {
  *obj = value;
}

static float floatp_value(float *obj) {
  return *obj;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1doublep(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (double *)new_doublep();
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1doublep(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double *)copy_doublep(arg1);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1doublep(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  double *arg1 = (double *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  delete_doublep(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_doublep_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
  double *arg1 = (double *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (double)jarg2; 
  doublep_assign(arg1,arg2);
}


SWIGEXPORT jdouble JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_doublep_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  result = (double)doublep_value(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1intp(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (int *)new_intp();
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1intp(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int *)copy_intp(arg1);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1intp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  int *arg1 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  delete_intp(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_intp_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  int *arg1 = (int *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  arg2 = (int)jarg2; 
  intp_assign(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_intp_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  int *arg1 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  result = (int)intp_value(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1uint32_1tp(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (uint32_t *)new_uint32_tp();
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1uint32_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  uint32_t arg1 ;
  uint32_t *argp1 ;
  uint32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(uint32_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null uint32_t");
    return 0;
  }
  arg1 = *argp1; 
  result = (uint32_t *)copy_uint32_tp(arg1);
  *(uint32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1uint32_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  uint32_t *arg1 = (uint32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint32_t **)&jarg1; 
  delete_uint32_tp(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_uint32_1tp_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  uint32_t *arg1 = (uint32_t *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint32_t **)&jarg1; 
  argp2 = *(uint32_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null uint32_t");
    return ;
  }
  arg2 = *argp2; 
  uint32_tp_assign(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_uint32_1tp_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  uint32_t *arg1 = (uint32_t *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint32_t **)&jarg1; 
  result = uint32_tp_value(arg1);
  *(uint32_t **)&jresult = new uint32_t((const uint32_t &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1int32_1tp(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (int32_t *)new_int32_tp();
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1int32_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  int32_t arg1 ;
  int32_t *argp1 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(int32_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null int32_t");
    return 0;
  }
  arg1 = *argp1; 
  result = (int32_t *)copy_int32_tp(arg1);
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1int32_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  int32_t *arg1 = (int32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int32_t **)&jarg1; 
  delete_int32_tp(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_int32_1tp_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  int32_t *arg1 = (int32_t *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int32_t **)&jarg1; 
  argp2 = *(int32_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null int32_t");
    return ;
  }
  arg2 = *argp2; 
  int32_tp_assign(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_int32_1tp_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  int32_t *arg1 = (int32_t *) 0 ;
  int32_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int32_t **)&jarg1; 
  result = int32_tp_value(arg1);
  *(int32_t **)&jresult = new int32_t((const int32_t &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1uint8_1tp(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  uint8_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (uint8_t *)new_uint8_tp();
  *(uint8_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1uint8_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  uint8_t arg1 ;
  uint8_t *argp1 ;
  uint8_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(uint8_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null uint8_t");
    return 0;
  }
  arg1 = *argp1; 
  result = (uint8_t *)copy_uint8_tp(arg1);
  *(uint8_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1uint8_1tp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint8_t **)&jarg1; 
  delete_uint8_tp(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_uint8_1tp_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint8_t arg2 ;
  uint8_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint8_t **)&jarg1; 
  argp2 = *(uint8_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null uint8_t");
    return ;
  }
  arg2 = *argp2; 
  uint8_tp_assign(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_uint8_1tp_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  uint8_t *arg1 = (uint8_t *) 0 ;
  uint8_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(uint8_t **)&jarg1; 
  result = uint8_tp_value(arg1);
  *(uint8_t **)&jresult = new uint8_t((const uint8_t &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1CTR_1Codep(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CTR_Code *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CTR_Code *)new_CTR_Codep();
  *(CTR_Code **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1CTR_1Codep(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  CTR_Code arg1 ;
  CTR_Code *argp1 ;
  CTR_Code *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(CTR_Code **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null CTR_Code");
    return 0;
  }
  arg1 = *argp1; 
  result = (CTR_Code *)copy_CTR_Codep(arg1);
  *(CTR_Code **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1CTR_1Codep(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CTR_Code *arg1 = (CTR_Code *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CTR_Code **)&jarg1; 
  delete_CTR_Codep(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CTR_1Codep_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  CTR_Code *arg1 = (CTR_Code *) 0 ;
  CTR_Code arg2 ;
  CTR_Code *argp2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CTR_Code **)&jarg1; 
  argp2 = *(CTR_Code **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null CTR_Code");
    return ;
  }
  arg2 = *argp2; 
  CTR_Codep_assign(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CTR_1Codep_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  CTR_Code *arg1 = (CTR_Code *) 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CTR_Code **)&jarg1; 
  result = CTR_Codep_value(arg1);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1floatp(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (float *)new_floatp();
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_copy_1floatp(JNIEnv *jenv, jclass jcls, jfloat jarg1) {
  jlong jresult = 0 ;
  float arg1 ;
  float *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (float)jarg1; 
  result = (float *)copy_floatp(arg1);
  *(float **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1floatp(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  float *arg1 = (float *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  delete_floatp(arg1);
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_floatp_1assign(JNIEnv *jenv, jclass jcls, jlong jarg1, jfloat jarg2) {
  float *arg1 = (float *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  arg2 = (float)jarg2; 
  floatp_assign(arg1,arg2);
}


SWIGEXPORT jfloat JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_floatp_1value(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jfloat jresult = 0 ;
  float *arg1 = (float *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(float **)&jarg1; 
  result = (float)floatp_value(arg1);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1CtreCanNode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  UINT8 arg1 ;
  UINT8 *argp1 ;
  CtreCanNode *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(UINT8 **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null UINT8");
    return 0;
  }
  arg1 = *argp1; 
  result = (CtreCanNode *)new CtreCanNode(arg1);
  *(CtreCanNode **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1CtreCanNode(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CtreCanNode *arg1 = (CtreCanNode *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CtreCanNode **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CtreCanNode_1GetDeviceNumber(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CtreCanNode *arg1 = (CtreCanNode *) 0 ;
  UINT8 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CtreCanNode **)&jarg1; 
  result = (arg1)->GetDeviceNumber();
  *(UINT8 **)&jresult = new UINT8((const UINT8 &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kDefaultControlPeriodMs_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kDefaultControlPeriodMs;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1CanTalonSRX_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  CanTalonSRX *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (CanTalonSRX *)new CanTalonSRX(arg1,arg2);
  *(CanTalonSRX **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1CanTalonSRX_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  CanTalonSRX *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (CanTalonSRX *)new CanTalonSRX(arg1);
  *(CanTalonSRX **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_new_1CanTalonSRX_1_1SWIG_12(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CanTalonSRX *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX *)new CanTalonSRX();
  *(CanTalonSRX **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_delete_1CanTalonSRX(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CanTalonSRX **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1Set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (double)jarg2; 
  (arg1)->Set(arg2);
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1DutyCycle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_DutyCycle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1PositionCloseLoop_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_PositionCloseLoop;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1VelocityCloseLoop_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_VelocityCloseLoop;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1CurrentCloseLoop_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_CurrentCloseLoop;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1VoltCompen_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_VoltCompen;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1SlaveFollower_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_SlaveFollower;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kMode_1NoDrive_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kMode_NoDrive;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kLimitSwitchOverride_1UseDefaultsFromFlash_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kLimitSwitchOverride_UseDefaultsFromFlash;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kLimitSwitchOverride_1DisableFwd_1DisableRev_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kLimitSwitchOverride_DisableFwd_DisableRev;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kLimitSwitchOverride_1DisableFwd_1EnableRev_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kLimitSwitchOverride_DisableFwd_EnableRev;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kLimitSwitchOverride_1EnableFwd_1DisableRev_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kLimitSwitchOverride_EnableFwd_DisableRev;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kLimitSwitchOverride_1EnableFwd_1EnableRev_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kLimitSwitchOverride_EnableFwd_EnableRev;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kBrakeOverride_1UseDefaultsFromFlash_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kBrakeOverride_UseDefaultsFromFlash;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kBrakeOverride_1OverrideCoast_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kBrakeOverride_OverrideCoast;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kBrakeOverride_1OverrideBrake_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kBrakeOverride_OverrideBrake;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1DigitalQuadEnc_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_DigitalQuadEnc;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1AnalogPot_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_AnalogPot;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1AnalogEncoder_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_AnalogEncoder;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1CountEveryRisingEdge_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_CountEveryRisingEdge;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1CountEveryFallingEdge_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_CountEveryFallingEdge;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kFeedbackDev_1PosIsPulseWidth_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kFeedbackDev_PosIsPulseWidth;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kProfileSlotSelect_1Slot0_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kProfileSlotSelect_Slot0;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kProfileSlotSelect_1Slot1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kProfileSlotSelect_Slot1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kStatusFrame_1General_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kStatusFrame_General;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kStatusFrame_1Feedback_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kStatusFrame_Feedback;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kStatusFrame_1Encoder_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kStatusFrame_Encoder;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1kStatusFrame_1AnalogTempVbat_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CanTalonSRX::kStatusFrame_AnalogTempVbat;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1P_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_P;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1I_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_I;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1D_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_D;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1F_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_F;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1IZone_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_IZone;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot0_1CloseLoopRampRate_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot0_CloseLoopRampRate;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1P_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_P;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1I_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_I;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1D_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_D;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1F_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_F;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1IZone_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_IZone;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSlot1_1CloseLoopRampRate_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSlot1_CloseLoopRampRate;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSoftLimitForThreshold_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSoftLimitForThreshold;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSoftLimitRevThreshold_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSoftLimitRevThreshold;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSoftLimitForEnable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSoftLimitForEnable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileParamSoftLimitRevEnable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileParamSoftLimitRevEnable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eOnBoot_1BrakeMode_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eOnBoot_BrakeMode;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eOnBoot_1LimitSwitch_1Forward_1NormallyClosed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eOnBoot_LimitSwitch_Forward_NormallyClosed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eOnBoot_1LimitSwitch_1Reverse_1NormallyClosed_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eOnBoot_LimitSwitch_Reverse_NormallyClosed;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eOnBoot_1LimitSwitch_1Forward_1Disable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eOnBoot_LimitSwitch_Forward_Disable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eOnBoot_1LimitSwitch_1Reverse_1Disable_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eOnBoot_LimitSwitch_Reverse_Disable;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1OverTemp_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_OverTemp;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1UnderVoltage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_UnderVoltage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1ForLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_ForLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1RevLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_RevLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1HardwareFailure_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_HardwareFailure;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1ForSoftLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_ForSoftLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFault_1RevSoftLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFault_RevSoftLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1OverTemp_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_OverTemp;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1UnderVoltage_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_UnderVoltage;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1ForLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_ForLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1RevLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_RevLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1ForSoftLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_ForSoftLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eStckyFault_1RevSoftLim_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eStckyFault_RevSoftLim;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eAppliedThrottle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eAppliedThrottle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eCloseLoopErr_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eCloseLoopErr;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFeedbackDeviceSelect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFeedbackDeviceSelect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eRevMotDuringCloseLoopEn_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eRevMotDuringCloseLoopEn;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eModeSelect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eModeSelect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eProfileSlotSelect_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eProfileSlotSelect;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eRampThrottle_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eRampThrottle;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eRevFeedbackSensor_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eRevFeedbackSensor;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eLimitSwitchEn_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eLimitSwitchEn;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eLimitSwitchClosedFor_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eLimitSwitchClosedFor;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eLimitSwitchClosedRev_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eLimitSwitchClosedRev;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eSensorPosition_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eSensorPosition;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eSensorVelocity_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eSensorVelocity;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eCurrent_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eCurrent;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eBrakeIsEnabled_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eBrakeIsEnabled;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eEncPosition_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eEncPosition;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eEncVel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eEncVel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eEncIndexRiseEvents_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eEncIndexRiseEvents;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eQuadApin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eQuadApin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eQuadBpin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eQuadBpin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eQuadIdxpin_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eQuadIdxpin;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eAnalogInWithOv_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eAnalogInWithOv;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eAnalogInVel_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eAnalogInVel;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eTemp_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eTemp;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eBatteryV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eBatteryV;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eResetCount_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eResetCount;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eResetFlags_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eResetFlags;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eFirmVers_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eFirmVers;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eSettingsChanged_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eSettingsChanged;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1eQuadFilterEn_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::eQuadFilterEn;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1ePidIaccum_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  CanTalonSRX::_param_t result;
  
  (void)jenv;
  (void)jcls;
  result = (CanTalonSRX::_param_t)CanTalonSRX::ePidIaccum;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  CanTalonSRX::param_t arg2 ;
  double arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (CanTalonSRX::param_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (arg1)->SetParam(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1RequestParam(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  CanTalonSRX::param_t arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (CanTalonSRX::param_t)jarg2; 
  result = (arg1)->RequestParam(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetParamResponse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  CanTalonSRX::param_t arg2 ;
  double *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (CanTalonSRX::param_t)jarg2; 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetParamResponse(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetParamResponseInt32(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  CanTalonSRX::param_t arg2 ;
  int *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (CanTalonSRX::param_t)jarg2; 
  arg3 = *(int **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetParamResponseInt32(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetPgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (double)jarg3; 
  result = (arg1)->SetPgain(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetIgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (double)jarg3; 
  result = (arg1)->SetIgain(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetDgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (double)jarg3; 
  result = (arg1)->SetDgain(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetFgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (double)jarg3; 
  result = (arg1)->SetFgain(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetIzone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  int arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->SetIzone(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetCloseLoopRampRate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  int arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (int)jarg3; 
  result = (arg1)->SetCloseLoopRampRate(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetSensorPosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetSensorPosition(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetForwardSoftLimit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetForwardSoftLimit(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetReverseSoftLimit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetReverseSoftLimit(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetForwardSoftEnable(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetForwardSoftEnable(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetReverseSoftEnable(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetReverseSoftEnable(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetPgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetPgain(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetIgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetIgain(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetDgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetDgain(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFgain(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  double *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(double **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetFgain(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetIzone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  int *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(int **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetIzone(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetCloseLoopRampRate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  int *arg3 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = *(int **)&jarg3;
  if (!arg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetCloseLoopRampRate(arg2,*arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetForwardSoftLimit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetForwardSoftLimit(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetReverseSoftLimit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetReverseSoftLimit(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetForwardSoftEnable(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetForwardSoftEnable(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetReverseSoftEnable(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetReverseSoftEnable(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetStatusFrameRate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (unsigned int)jarg3; 
  result = (arg1)->SetStatusFrameRate(arg2,arg3);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1ClearStickyFaults(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  result = (arg1)->ClearStickyFaults();
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1OverTemp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_OverTemp(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1UnderVoltage(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_UnderVoltage(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1ForLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_ForLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1RevLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_RevLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1HardwareFailure(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_HardwareFailure(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1ForSoftLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_ForSoftLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFault_1RevSoftLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFault_RevSoftLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1OverTemp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_OverTemp(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1UnderVoltage(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_UnderVoltage(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1ForLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_ForLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1RevLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_RevLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1ForSoftLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_ForSoftLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetStckyFault_1RevSoftLim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetStckyFault_RevSoftLim(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetAppliedThrottle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetAppliedThrottle(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetCloseLoopErr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetCloseLoopErr(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFeedbackDeviceSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFeedbackDeviceSelect(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetModeSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetModeSelect(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetLimitSwitchEn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetLimitSwitchEn(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetLimitSwitchClosedFor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetLimitSwitchClosedFor(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetLimitSwitchClosedRev(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetLimitSwitchClosedRev(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetSensorPosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetSensorPosition(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetSensorVelocity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetSensorVelocity(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetCurrent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  double *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(double **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetCurrent(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetBrakeIsEnabled(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetBrakeIsEnabled(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetEncPosition(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetEncPosition(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetEncVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetEncVel(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetEncIndexRiseEvents(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetEncIndexRiseEvents(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetQuadApin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetQuadApin(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetQuadBpin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetQuadBpin(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetQuadIdxpin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetQuadIdxpin(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetAnalogInWithOv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetAnalogInWithOv(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetAnalogInVel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetAnalogInVel(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetTemp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  double *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(double **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetTemp(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetBatteryV(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  double *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(double **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "double & reference is null");
    return 0;
  } 
  result = (arg1)->GetBatteryV(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetResetCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetResetCount(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetResetFlags(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetResetFlags(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1GetFirmVers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int *arg2 = 0 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = *(int **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "int & reference is null");
    return 0;
  } 
  result = (arg1)->GetFirmVers(*arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetDemand(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetDemand(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetOverrideLimitSwitchEn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetOverrideLimitSwitchEn(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetFeedbackDeviceSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetFeedbackDeviceSelect(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetRevMotDuringCloseLoopEn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetRevMotDuringCloseLoopEn(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetOverrideBrakeType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetOverrideBrakeType(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetModeSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetModeSelect(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetProfileSlotSelect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetProfileSlotSelect(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetRampThrottle(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetRampThrottle(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SetRevFeedbackSensor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CanTalonSRX *arg1 = (CanTalonSRX *) 0 ;
  int arg2 ;
  CTR_Code result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CanTalonSRX **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (arg1)->SetRevFeedbackSensor(arg2);
  *(CTR_Code **)&jresult = new CTR_Code((const CTR_Code &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_edu_wpi_first_wpilibj_hal_CanTalonJNI_CanTalonSRX_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(CtreCanNode **)&baseptr = *(CanTalonSRX **)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

