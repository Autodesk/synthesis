using UnityEngine;
using System.Collections;
using System.IO;
using System.Collections.Generic;

public class GenerateWheels : MonoBehaviour {
	int numOfWheels;


//	Generate game object in which will be the chasis of robot

	//for creation by mouse - not operational
//	void Update() {
////				if (Input.GetMouseButtonDown (0)) {
//			Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);
////			Debug.Log (ray);
//			RaycastHit hitInfo = new RaycastHit();
//			if (collider.Raycast(ray, out hitInfo, Mathf.Infinity)){
//			generateWheels (1, 4, hitInfo.point);
//				}
//		}
//	}
	void generateCubes(int amt)
	  {
		    GameObject tmp;
		    for (int i = 0; i < amt; i++) 
		    {
			float x,y,z;
		//	x,y,z = sizeof object
			x = 1;
			y = 1;
			z = 1;
			tmp = GameObject.CreatePrimitive(PrimitiveType.Cube);
			//Changing size of cube temporarily for this car - will not need to change it for bxda file
				  tmp.transform.localScale = new Vector3(x, y, z);
				tmp.transform.parent = this.transform;
			      tmp.transform.position = new Vector3(10,1,10);
			      tmp.name = "part" + i;

			    }
		  }
	//Read in BXDA format, right now we will just have a basic cube being created in start

	//Generate wheel colliders that will connect to the chasis of robot procedurally
	//They also be read in from BXDA format and be assigned
	void generateWheels( int numOfWheels /*, Vector3 wheelStart */) {


			GameObject wheel;
			for (int i = 0; i < numOfWheels; i++) {
				float x, y, z;
				x = 0;
				y = 0.01f;
				z = 0;

			//creates wheel colliders procedurally
				GameObject wheelCollider = new GameObject("wheelCollider", typeof(WheelCollider));
				wheelCollider.transform.position =  new Vector3(x, y, z);
				wheelCollider.name = "wheelCollider" + i;
				wheelCollider.transform.parent = this.transform;

			//if you wanted to create a wheel as well:

			//				wheel = GameObject.CreatePrimitive (PrimitiveType.Cylinder);
			//				wheel.transform.position =  new Vector3(x, y, z);

			//	wheel.transform.parent = this.transform;
			//	wheel.transform.position = new Vector3 (x, y, z);
			//	wheel.name = "part" + i;

				
				}	
	
	}
	// Use this for initialization
	void Start () {
		generateCubes (1);
		generateWheels (4);

	}
}
